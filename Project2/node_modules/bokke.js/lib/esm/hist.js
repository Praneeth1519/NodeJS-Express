import { make_histogram } from "./plots";
export default class Hist {
    constructor(bin, data) {
        this.histObj = {};
        this.x = undefined;
        this.y = undefined;
        this.type = "Hist";
        make_histogram(data, bin).then((hist) => {
            this.histObj = hist;
            this.x = Object.keys(hist);
            this.y = Object.values(hist);
        });
    }
    freq(n) {
        if (this.histObj[n]) {
            return this.histObj[n];
        }
        else {
            throw new Error(`${n} does not exist`);
        }
    }
    largest(n) {
        let sorted = JSON.parse(JSON.stringify(this.x));
        return sorted.sort((a, b) => +a - +b).slice(-n);
    }
    smallest(n) {
        let sorted = JSON.parse(JSON.stringify(this.x));
        return sorted.sort((a, b) => +a - +b).slice(0, n);
    }
}
//# sourceMappingURL=hist.js.map